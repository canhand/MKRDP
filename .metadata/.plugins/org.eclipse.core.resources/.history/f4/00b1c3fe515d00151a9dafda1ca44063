package com.themkrworld.mkrdpcreator;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class Value {
	private static final String	DIMENSION_FILE	= "dimens.xml";
	private float				mMultiplire;
	private BufferedWriter		mBufferedWriterDim;
	private String				mDirName;

	/**
	 * Constructor
	 * 
	 * @param parentPath
	 * @param dirName
	 * @param multiplire
	 */
	public Value(String parentPath, String dirName, float multiplire) {
		mMultiplire = multiplire;
		mDirName = dirName;
		File fileValuesFolderName = new File(parentPath, dirName);
		if (!fileValuesFolderName.exists()) {
			try {
				fileValuesFolderName.createNewFile();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		System.out.println("Value.Value() " + (!fileValuesFolderName.isDirectory()));
		if (!fileValuesFolderName.isDirectory()) {
			fileValuesFolderName.delete();
			fileValuesFolderName.mkdir();
		}
		System.out.println("Value.Value() " + fileValuesFolderName.isDirectory());
		File fileDimension = new File(fileValuesFolderName.getAbsoluteFile(), DIMENSION_FILE);
		System.out.println("Value.Value() " + (!fileDimension.exists()));
		if (!fileDimension.exists()) {
			try {
				fileDimension.createNewFile();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		try {
			mBufferedWriterDim = new BufferedWriter(new FileWriter(fileDimension));
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/**
	 * Method to initialize
	 */
	public void writeAndSaveData() {
		if (mBufferedWriterDim != null) {
			try {
				mBufferedWriterDim.write("<resources>\n");
				mBufferedWriterDim.write("<!-- " + mDirName + " -->\n");
				for (float i = 0.1F; i < 1; i+=0.1) {
					mBufferedWriterDim.write("<dimen name=\"mkrdp_" + ((int) i) + "\">" + (Math.round((i * mMultiplire) * 100F) / 100F) + "dp</dimen>\n");
				}
				for (float i = 1; i < 400; i++) {
					mBufferedWriterDim.write("<dimen name=\"mkrdp_" + ((int) i) + "\">" + (Math.round((i * mMultiplire) * 100F) / 100F) + "dp</dimen>\n");
				}
				mBufferedWriterDim.write("</resources>");
			} catch (Exception e) {
				e.printStackTrace();
			}
			try {
				mBufferedWriterDim.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	public String getFileName() {
		return mDirName;
	}
}
